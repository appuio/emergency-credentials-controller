---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: emergencyaccounts.cluster.appuio.io
spec:
  group: cluster.appuio.io
  names:
    kind: EmergencyAccount
    listKind: EmergencyAccountList
    plural: emergencyaccounts
    singular: emergencyaccount
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: EmergencyAccount is the Schema for the emergencyaccounts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EmergencyAccountSpec defines the desired state of EmergencyAccount
            properties:
              checkInterval:
                default: 5m
                description: CheckInterval is the interval in which the tokens are
                  checked for validity.
                format: duration
                type: string
              minRecreateInterval:
                default: 5m
                description: MinRecreateInterval is the minimum interval in which
                  a new token is created.
                format: duration
                type: string
              minValidityDurationLeft:
                default: 168h
                description: MinValidityDurationLeft is the minimum duration the token
                  must be valid. A new token is created if the current token is not
                  valid for this duration anymore.
                format: duration
                type: string
              tokenStores:
                description: TokenStore defines the stores the created tokens are
                  stored in.
                items:
                  description: TokenStore defines the store the created tokens are
                    stored in
                  properties:
                    logStore:
                      description: LogSpec configures the log store. The log store
                        outputs the token to the log but does not store it anywhere.
                      properties:
                        additionalFields:
                          additionalProperties:
                            type: string
                          description: AdditionalFields is a map of additional fields
                            to log.
                          type: object
                      type: object
                    name:
                      description: Name is the name of the store. Must be unique within
                        the EmergencyAccount
                      type: string
                    s3Store:
                      description: S3Spec configures the S3 store. The S3 store saves
                        the tokens in an S3 bucket.
                      properties:
                        encryption:
                          description: Encryption defines the encryption settings
                            for the S3 store. If not set, the tokens are stored unencrypted.
                          properties:
                            encrypt:
                              description: Encrypt defines if the tokens should be
                                encrypted. If not set, the tokens are stored unencrypted.
                              type: boolean
                            pgpKeys:
                              description: PGPKeys is a list of PGP public keys to
                                encrypt the tokens with. At least one key must be
                                given if encryption is enabled.
                              items:
                                type: string
                              type: array
                          type: object
                        objectNameTemplate:
                          description: ObjectNameTemplate is the template for the
                            object name to use. Sprig functions can be used to generate
                            the object name. If not set, the object name is the name
                            of the EmergencyAccount. The name of the EmergencyAccount
                            can be accessed with `{{ .Name }}`. The namespace of the
                            EmergencyAccount can be accessed with `{{ .Namespace }}`.
                            The full EmergencyAccount object can be accessed with
                            `{{ .EmergencyAccount }}`. Additional context can be passed
                            with the `objectNameTemplateContext` field and is accessible
                            with `{{ .Context.<key> }}`.
                          type: string
                        objectNameTemplateContext:
                          additionalProperties:
                            type: string
                          description: ObjectNameTemplateContext is the additional
                            context to use for the object name template.
                          type: object
                        s3:
                          properties:
                            accessKeyId:
                              description: AccessKeyId and SecretAccessKey are the
                                S3 credentials to use.
                              type: string
                            bucket:
                              description: Bucket is the S3 bucket to use.
                              type: string
                            endpoint:
                              description: Endpoint is the S3 endpoint to use.
                              type: string
                            insecure:
                              description: Insecure allows to use an insecure connection
                                to the S3 endpoint.
                              type: boolean
                            region:
                              description: Region is the AWS region to use.
                              type: string
                            secretAccessKey:
                              description: SecretAccessKey is the S3 secret access
                                key to use.
                              type: string
                          required:
                          - accessKeyId
                          - bucket
                          - endpoint
                          - secretAccessKey
                          type: object
                      required:
                      - s3
                      type: object
                    secretStore:
                      description: SecretSpec configures the secret store. The secret
                        store saves the tokens in a secret in the same namespace as
                        the EmergencyAccount.
                      type: object
                    type:
                      description: Type defines the type of the store to use. Currently
                        `secret`, `s3`, and `log` stores are supported. The stores
                        can be further configured in the corresponding storeSpec.
                      enum:
                      - secret
                      - log
                      - s3
                      type: string
                  required:
                  - name
                  - type
                  type: object
                minItems: 1
                type: array
              validityDuration:
                default: 720h
                description: ValidityDuration is the duration for which the tokens
                  are valid.
                format: duration
                type: string
            required:
            - validityDuration
            type: object
          status:
            description: EmergencyAccountStatus defines the observed state of EmergencyAccount
            properties:
              lastTokenCreationTimestamp:
                description: LastTokenCreationTimestamp is the timestamp when the
                  last token was created.
                format: date-time
                type: string
              lastTokenStoreConfigurationHashes:
                description: LastTokenStoreConfigurationHashes is the hash of the
                  last token store configuration. It is used to detect changes in
                  the token store configuration. A change in the configuration triggers
                  the creation of a new token.
                items:
                  properties:
                    hash:
                      description: Sha256 is the hash of the store configuration.
                      type: string
                    name:
                      description: Name is the name of the store.
                      type: string
                  required:
                  - hash
                  - name
                  type: object
                type: array
              tokens:
                description: Tokens is a list of tokens that have been created
                items:
                  description: TokenStatus defines the observed state of the managed
                    token
                  properties:
                    expirationTimestamp:
                      description: ExpirationTimestamp is the timestamp when the token
                        expires
                      format: date-time
                      type: string
                    refs:
                      description: Refs holds references to the token in the configured
                        stores.
                      items:
                        properties:
                          ref:
                            description: Ref is a reference to the token. The used
                              storage should be able to uniquely identify the token.
                              If no ref is given, the token is not checked for validity.
                            type: string
                          store:
                            description: Store is the name of the store the token
                              is stored in.
                            type: string
                        required:
                        - store
                        type: object
                      type: array
                    uid:
                      description: UID is the unique identifier of the token. Currently
                        only used for error messages.
                      type: string
                  required:
                  - expirationTimestamp
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
